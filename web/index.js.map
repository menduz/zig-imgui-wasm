{
  "version": 3,
  "sources": ["../src/js/index.ts", "../src/js/common.ts", "../src/js/env.ts", "../src/js/graphics.ts", "../src/js/input.ts", "../src/js/stdx.ts"],
  "sourcesContent": ["import { initEnvImports } from \"./env\";\nimport { initGraphicsImports } from \"./graphics\";\nimport { initInputApi } from \"./input\";\nimport { initStdxImports } from \"./stdx\";\nimport { ImguiWasmInstance, ManagedMemory } from \"./types\";\n\nexport { initInputApi }\n\nfunction emptyManagedMemory() {\n  const buffer = new ArrayBuffer(0)\n\n  const _mmem: ManagedMemory = {\n    buffer,\n    view: new DataView(buffer),\n    HEAP8: new Int8Array(buffer),\n    HEAP16: new Int16Array(buffer),\n    HEAP32: new Int32Array(buffer),\n    HEAPU8: new Uint8Array(buffer),\n    HEAPU16: new Uint16Array(buffer),\n    HEAPU32: new Uint32Array(buffer),\n    HEAPF32: new Float32Array(buffer),\n    HEAPF64: new Float64Array(buffer),\n  }\n\n  return _mmem\n}\n\nexport async function createImgui(canvas: HTMLCanvasElement, webglContext: WebGL2RenderingContext): Promise<ImguiWasmInstance> {\n  const _mmem: ManagedMemory = emptyManagedMemory()\n\n  const wasm: ImguiWasmInstance = {\n    imports: {},\n    inputLen: 0,\n    inputPtr: 0,\n    inputCap: 0,\n    get mmem() {\n      const buf = wasm.exports.memory.buffer;\n      if (_mmem.buffer === buf) return _mmem;\n      _mmem.view = new DataView(buf);\n      _mmem.HEAP8 = new Int8Array(buf);\n      _mmem.HEAP16 = new Int16Array(buf);\n      _mmem.HEAP32 = new Int32Array(buf);\n      _mmem.HEAPU8 = new Uint8Array(buf);\n      _mmem.HEAPU16 = new Uint16Array(buf);\n      _mmem.HEAPU32 = new Uint32Array(buf);\n      _mmem.HEAPF32 = new Float32Array(buf);\n      _mmem.HEAPF64 = new Float64Array(buf)\n      _mmem.buffer = buf;\n      console.log(`Resizing memory, now it is ${(buf.byteLength / 1024 / 1024).toFixed(1)} MB`)\n      return _mmem\n    },\n  } as any;\n\n  wasm.imports.env = initEnvImports(wasm);\n  wasm.imports.graphics = initGraphicsImports(wasm, canvas, webglContext);\n  wasm.imports.stdx = initStdxImports(wasm);\n\n\n  // Load wasm.\n  const wasmFile = 'imgui-webgl.wasm';\n  const resp = await fetch(wasmFile)\n  const buf = await resp.arrayBuffer()\n  const res = await WebAssembly.instantiate(buf, wasm.imports)\n  wasm.exports = res.instance.exports as any;\n\n  wasm.exports.onInit()\n  wasm.exports.windowSizeChanged(canvas.width, canvas.height, devicePixelRatio);\n\n  return wasm\n}", "import { ImguiWasmInstance } from \"./types\";\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\nexport function getString(wasm: ImguiWasmInstance, ptr: number, len: number) {\n  return textDecoder.decode(wasm.exports.memory.buffer.slice(ptr, ptr + len));\n}\n\nexport function getCString(wasm: ImguiWasmInstance, ptr: number) {\n  const view = new Uint8Array(wasm.exports.memory.buffer.slice(ptr))\n  let count = 0\n  while (view[count] !== 0)\n    count++\n  return textDecoder.decode(wasm.exports.memory.buffer.slice(ptr, ptr + count));\n}", "import { getCString } from './common';\nimport { ImguiWasmImports } from './idl'\nimport { ImguiWasmInstance } from './types';\n\nexport function initEnvImports(wasm: ImguiWasmInstance): ImguiWasmImports[\"env\"] {\n  return {\n    __assert_fail(expr, file, line, func) {\n      const errorExpression = getCString(wasm, expr)\n      const errorFile = getCString(wasm, file)\n      const errorLine = line\n      const errorFunction = getCString(wasm, func)\n      try {\n        throw new Error('asd')\n      } catch (err: any) {\n        err.stack = errorExpression + `\\n    at ${errorFunction} (${errorFile}:${errorLine})` + err.stack.replace(/.+__assert_fail.+\\n/m, '').replace(/Error: asd/, '')\n        console.error(err)\n        debugger\n        throw err\n      }\n    },\n    __stack_chk_fail() {\n      debugger\n      console.log('__stack_chk_fail')\n    },\n    acosf(x) {\n      return Math.acos(x)\n    },\n    atan2f(x, y) {\n      return Math.atan2(x, y)\n    },\n    powf(x, y) {\n      return Math.pow(x, y)\n    },\n    toupper(char) {\n      return String.fromCharCode(char).toUpperCase().charCodeAt(0)\n    },\n    printf(a, b) {\n      debugger\n      return 0\n    },\n    sscanf(a, b) {\n      debugger\n      return 0\n    },\n    fflush(a) {\n      debugger\n      return 0\n    }\n  }\n}", "import { getCString, getString } from './common';\nimport { ImguiWasmImports } from './idl'\nimport { ImguiWasmInstance } from './types';\n\nexport function initGraphicsImports(wasm: ImguiWasmInstance, canvas: HTMLCanvasElement, ctx: WebGL2RenderingContext): ImguiWasmImports[\"graphics\"] {\n  const text_encoder = new TextEncoder()\n\n  const unused_res_ids: number[] = []\n  let next_res_id = 1\n\n  function getNextResId(): number {\n    if (unused_res_ids.length > 0) {\n      return unused_res_ids.shift()!\n    } else {\n      const id = next_res_id\n      next_res_id += 1\n      return id\n    }\n  }\n\n  function removeResId(id: number) {\n    unused_res_ids.push(id)\n  }\n\n  const textures = new Map()\n  const framebuffers = new Map<number, WebGLFramebuffer>()\n  const renderbuffers = new Map()\n  const vertex_arrays = new Map<number, WebGLVertexArrayObject>()\n  const shaders = new Map<number, WebGLShader>()\n  const programs = new Map<number, WebGLProgram>()\n  const buffers = new Map<number, WebGLBuffer>()\n  const uniform_locs = new Map<number, WebGLUniformLocation>()\n\n  function emscriptenWebGLGetVertexAttrib(index: number, pname: number, params: number, type: number) {\n    if (!params) {\n      debugger // GL.recordError(1281);\n      return\n    }\n    const buffer = buffers.get(index)\n    if (!buffer) {\n      debugger\n      throw new Error('glGetVertexAttrib*v on client-side array: not supported, bad data returned')\n    }\n    var data = ctx.getVertexAttrib(index, pname);\n    if (pname == 34975) {\n      wasm.mmem.HEAP32[params >>> 2] = data && data['name']\n    } else if (typeof data == 'number' || typeof data == 'boolean') {\n      switch (type) {\n        case 0:\n          wasm.mmem.HEAP32[params >>> 2] = +data;\n          break;\n        case 2:\n          wasm.mmem.HEAPF32[params >>> 2] = +data;\n          break;\n        case 5:\n          wasm.mmem.HEAP32[params >>> 2] = Math.fround(+data);\n          break\n      }\n    } else {\n      for (var i = 0; i < data.length; i++) {\n        switch (type) {\n          case 0:\n            wasm.mmem.HEAP32[params + i * 4 >>> 2] = data[i];\n            break;\n          case 2:\n            wasm.mmem.HEAPF32[params + i * 4 >>> 2] = data[i];\n            break;\n          case 5:\n            wasm.mmem.HEAP32[params + i * 4 >>> 2] = Math.fround(data[i]);\n            break\n        }\n      }\n    }\n  }\n\n  function ensureShader(id: number) {\n    const s = shaders.get(id)\n    if (!s) {\n      debugger\n      throw new Error(`Missing shader id ${id}`)\n    }\n    return s\n  }\n\n  function ensureUniform(id: number) {\n    const s = uniform_locs.get(id)\n    if (!s) {\n      debugger\n      throw new Error(`Missing uniform id ${id}`)\n    }\n    return s\n  }\n\n  function ensureProgram(id: number) {\n    const p = programs.get(id)\n    if (!p) {\n      debugger\n      throw new Error(`Missing program id ${id}`)\n    }\n    return p\n  }\n\n  return {\n    jsSetCanvasBuffer(width, height) {\n      const dpr = window.devicePixelRatio || 1;\n\n      const w = width * dpr\n      const h = height * dpr\n\n      if (w !== canvas.width || h !== canvas.height) {\n        canvas.style.width = `${width}px`\n        canvas.style.height = `${height}px`\n        canvas.width = width * dpr\n        canvas.height = height * dpr\n      }\n\n      return dpr\n    },\n    jsGlFrontFace(mode) {\n      ctx.frontFace(mode);\n    },\n    jsGlGetUniformLocation(program_id, name_ptr, name_len) {\n      const p = ensureProgram(program_id)\n      const loc: any = ctx.getUniformLocation(p, getString(wasm, name_ptr, name_len))\n      if (!loc.id) {\n        loc.id = getNextResId()\n        uniform_locs.set(loc.id, loc)\n      }\n      return loc.id\n    },\n    jsGlGetProgramiv(program, pname, params) {\n      const p = ensureProgram(program)\n\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        const log = ctx.getProgramInfoLog(p);\n        // The GLES2 specification says that if the shader has an empty info log,\n        // a value of 0 is returned. Otherwise the log has a null char appended.\n        // (An empty string is falsey, so we can just check that instead of\n        // looking at log.length.)\n        const logLength = log ? log.length + 1 : 0;\n        wasm.mmem.HEAP32[params >>> 2] = logLength\n      } else {\n\n\n        //     if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        //       var log = GLctx.getProgramInfoLog(program);\n        // #if GL_ASSERTIONS || GL_TRACK_ERRORS\n        //       if (log === null) log = '(unknown error)';\n        // #endif\n        //       {{{ makeSetValue('p', '0', 'log.length + 1', 'i32') }}};\n        //     } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\n        //       if (!program.maxUniformLength) {\n        //         for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\n        //           program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\n        //         }\n        //       }\n        //       {{{ makeSetValue('p', '0', 'program.maxUniformLength', 'i32') }}};\n        //     } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\n        //       if (!program.maxAttributeLength) {\n        //         for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\n        //           program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\n        //         }\n        //       }\n        //       {{{ makeSetValue('p', '0', 'program.maxAttributeLength', 'i32') }}};\n        //     } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\n        //       if (!program.maxUniformBlockNameLength) {\n        //         for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\n        //           program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\n        //         }\n        //       }\n        //       {{{ makeSetValue('p', '0', 'program.maxUniformBlockNameLength', 'i32') }}};\n        //     } else {\n        //       {{{ makeSetValue('p', '0', 'GLctx.getProgramParameter(program, pname)', 'i32') }}};\n        //     }\n\n        const param = ctx.getProgramParameter(p, pname);\n        if (pname == ctx.LINK_STATUS) {\n          if (param) {\n            // gl.GL_TRUE\n            wasm.mmem.HEAP32[params >>> 2] = 1\n          }\n          else {\n            // gl.GL_FALSE\n            wasm.mmem.HEAP32[params >>> 2] = 0\n          }\n        }\n        else if (Number.isInteger(param)) {\n          wasm.mmem.HEAP32[params >>> 2] = param\n        }\n        else if (param === true) {\n          wasm.mmem.HEAP32[params >>> 2] = 1\n        }\n        else if (param === false) {\n          wasm.mmem.HEAP32[params >>> 2] = 0\n        }\n        else {\n          console.warn(`getProgramParameter 0x${pname.toString(16)}: ${param}`);\n        }\n      }\n    },\n    jsGlGetShaderiv(program, pname, params) {\n      const s = ensureShader(program)\n      if (program <= 0 || !s) {\n        return;\n      }\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        const log = ctx.getShaderInfoLog(s);\n        // The GLES2 specification says that if the shader has an empty info log,\n        // a value of 0 is returned. Otherwise the log has a null char appended.\n        // (An empty string is falsey, so we can just check that instead of\n        // looking at log.length.)\n        const logLength = log ? log.length + 1 : 0;\n        wasm.mmem.HEAP32[params >>> 2] = logLength\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\n        var source = ctx.getShaderSource(s);\n        // source may be a null, or the empty string, both of which are falsey\n        // values that we report a 0 length for.\n        var sourceLength = source ? source.length + 1 : 0;\n        wasm.mmem.HEAP32[params >>> 2] = sourceLength\n      } else {\n        const param = ctx.getShaderParameter(s, pname);\n\n        if (pname == ctx.LINK_STATUS) {\n          if (param) {\n            // gl.GL_TRUE\n            wasm.mmem.HEAP32[params >>> 2] = 1\n          }\n          else {\n            // gl.GL_FALSE\n            wasm.mmem.HEAP32[params >>> 2] = 0\n          }\n        }\n        else if (Number.isInteger(param)) {\n          wasm.mmem.HEAP32[params >>> 2] = param\n        }\n        else if (param === true) {\n          wasm.mmem.HEAP32[params >>> 2] = 1\n        }\n        else if (param === false) {\n          wasm.mmem.HEAP32[params >>> 2] = 0\n        }\n        else {\n          console.warn(`jsGlGetShaderiv 0x${pname.toString(16)}: ${param}`);\n        }\n      }\n    },\n    jsGlCreateTexture() {\n      const id = getNextResId()\n      textures.set(id, ctx.createTexture())\n      return id\n    },\n    jsGlEnable(val) {\n      ctx.enable(val)\n    },\n    jsGlDisable(val) {\n      ctx.disable(val)\n    },\n    jsGlBindTexture(target, tex_id) {\n      const tex = textures.get(tex_id)\n      ctx.bindTexture(target, tex)\n    },\n    jsGlClearColor(r, g, b, a) {\n      ctx.clearColor(r, g, b, a)\n    },\n    jsGlGetParameterInt(tag) {\n      return ctx.getParameter(tag)\n    },\n    jsGlGetFrameBufferBinding() {\n      const cur = ctx.getParameter(ctx.FRAMEBUFFER_BINDING)\n      if (cur == null) {\n        return 0\n      } else {\n        return cur.id\n      }\n    },\n    jsGlPolygonOffset(factor, units) {\n      ctx.polygonOffset(factor, units)\n    },\n    jsGlLineWidth(width) {\n      ctx.lineWidth(width)\n    },\n    jsGlCreateFramebuffer() {\n      const id = getNextResId()\n      const fb: any = ctx.createFramebuffer()\n      // Some ops will return the webgl fb object. Record the id on the object so it can map back to a wasm resource id.\n      fb.id = id\n      framebuffers.set(id, fb)\n      return id\n    },\n    jsGlCreateRenderbuffer() {\n      const id = getNextResId()\n      renderbuffers.set(id, ctx.createRenderbuffer())\n      return id\n    },\n    jsGlBindFramebuffer(target, id) {\n      if (id == 0) {\n        ctx.bindFramebuffer(target, null)\n      } else {\n        ctx.bindFramebuffer(target, framebuffers.get(id)! || null)\n      }\n    },\n    jsGlRenderbufferStorageMultisample(target, samples, internalformat, width, height) {\n      ctx.renderbufferStorageMultisample(target, samples, internalformat, width, height)\n    },\n    jsGlBindVertexArray(id) {\n      ctx.bindVertexArray(vertex_arrays.get(id)!)\n    },\n    jsGlBindBuffer(target, id) {\n      const buf = buffers.get(id) || null\n      if (!buf && id !== 0) {\n        debugger\n        throw new Error('invalid buffer ' + id)\n      }\n      ctx.bindBuffer(target, buf)\n    },\n    jsGlEnableVertexAttribArray(index) {\n      ctx.enableVertexAttribArray(index)\n    },\n    jsGlCreateShader(type) {\n      const id = getNextResId()\n      shaders.set(id, ctx.createShader(type)!)\n      return id\n    },\n    // jsGlGetString(name) {\n    //   switch (name) {\n    //     case 0x1F03 /* GL_EXTENSIONS */:\n    //       var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n    //       exts = exts.concat(exts.map(function (e) { return \"GL_\" + e; }));\n    //       ret = stringToNewUTF8(exts.join(' '));\n    //       break;\n    //     case 0x1F00 /* GL_VENDOR */:\n    //     case 0x1F01 /* GL_RENDERER */:\n    //     case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\n    //     case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\n    //       var s = GLctx.getParameter(name_);\n    //       if (!s) {\n    //         GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    //         err('GL_INVALID_ENUM in glGetString: Received empty parameter for query name ' + name_ + '!'); // This occurs e.g. if one attempts GL_UNMASKED_VENDOR_WEBGL when it is not supported.\n    //       }\n    //       ret = s && stringToNewUTF8(s);\n    //       break;\n\n    //     case 0x1F02 /* GL_VERSION */:\n    //       var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\n    //       // return GLES version string corresponding to the version of the WebGL context\n    //       if ({{ { isCurrentContextWebGL2() } })\n    //       glVersion = 'OpenGL ES 3.0 (' + glVersion + ')';\n    //       ret = stringToNewUTF8(glVersion);\n    //       break;\n    //     case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\n    //       var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\n    //       // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\n    //       var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\n    //       var ver_num = glslVersion.match(ver_re);\n    //       if (ver_num !== null) {\n    //         if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\n    //         glslVersion = 'OpenGL ES GLSL ES ' + ver_num[1] + ' (' + glslVersion + ')';\n    //       }\n    //       ret = stringToNewUTF8(glslVersion);\n    //       break;\n    //   }\n    // },\n    jsGlShaderSource(id, count, data_ptr, len_ptr) {\n      var source = '';\n      for (var i = 0; i < count; ++i) {\n        const len = length ? wasm.mmem.HEAP32[len_ptr + i * 4 >>> 2] : - 1;\n        const ptr = wasm.mmem.HEAP32[data_ptr + i * 4 >>> 2]\n        source += len >= 0 ? getString(wasm, ptr, len) : getCString(wasm, ptr)\n      }\n      console.log({ source, shader: id })\n      ctx.shaderSource(ensureShader(id), source)\n    },\n    jsGlCompileShader(id) {\n      const shader = ensureShader(id)\n      ctx.compileShader(shader)\n\n      console.info('shader', id, ctx.getShaderInfoLog(shader));\n\n      if (!ctx.getShaderParameter(shader, ctx.COMPILE_STATUS)) {\n        console.error(\"Error compiling shader:\" + ctx.getShaderInfoLog(shader));\n      }\n    },\n    jsGlGetShaderParameterInt(id, param) {\n      return ctx.getShaderParameter(ensureShader(id), param)\n    },\n    jsGlGetShaderInfoLog(id, buf_size, log_ptr) {\n      const log = ctx.getShaderInfoLog(ensureShader(id))\n      if (!log) {\n        debugger\n        throw new Error('no log')\n      }\n      const log_utf8 = text_encoder.encode(log).slice(0, buf_size)\n      wasm.mmem.HEAPU8.set(log_utf8, log_ptr)\n      return log.length\n    },\n    jsGlDeleteShader(id) {\n      ctx.deleteShader(ensureShader(id))\n      removeResId(id)\n    },\n    jsGlCreateProgram() {\n      const id = getNextResId()\n      programs.set(id, ctx.createProgram()!)\n      return id\n    },\n    jsGlAttachShader(program_id, shader_id) {\n      const program = ensureProgram(program_id)\n      const shader = ensureShader(shader_id)\n      ctx.attachShader(program, shader)\n    },\n    jsGlDetachShader(program_id, shader_id) {\n      const program = ensureProgram(program_id)\n      const shader = ensureShader(shader_id)\n      ctx.detachShader(program, shader)\n    },\n    jsGlLinkProgram(id) {\n      const program = ensureProgram(id)\n      ctx.linkProgram(program)\n      console.info('program', ctx.getProgramInfoLog(program));\n      if (!ctx.getProgramParameter(program, ctx.LINK_STATUS)) {\n        console.error(\"Error linking program:\" + ctx.getProgramInfoLog(program));\n      }\n    },\n    jsGlGetProgramParameterInt(id, param) {\n      const program = ensureProgram(id)\n      return ctx.getProgramParameter(program, param)\n    },\n    jsGlGetProgramInfoLog(id, buf_size, log_ptr) {\n      const program = ensureProgram(id)\n      const log = ctx.getProgramInfoLog(program)\n      if (!log) {\n        debugger\n        throw new Error('no log')\n      }\n      const log_utf8 = text_encoder.encode(log).slice(0, buf_size)\n      wasm.mmem.HEAPU8.set(log_utf8, log_ptr)\n      return log.length\n    },\n    jsGlDeleteProgram(id) {\n      const program = ensureProgram(id)\n      ctx.deleteProgram(program)\n      removeResId(id)\n    },\n    jsGlCreateVertexArray() {\n      const id = getNextResId()\n      vertex_arrays.set(id, ctx.createVertexArray()!)\n      return id\n    },\n    jsGlDrawArraysInstanced(mode, first, count, instanceCount) {\n      ctx.drawArraysInstanced(mode, first, count, instanceCount)\n    },\n    jsGlDrawArrays(mode, first, count) {\n      ctx.drawArrays(mode, first, count)\n    },\n    jsGlTexParameteri(target, pname, param) {\n      ctx.texParameteri(target, pname, param)\n    },\n    jsGlTexImage2D(target, level, internal_format, width, height, border, format, type, pixels_ptr) {\n      if (pixels_ptr == 0) {\n        // Initialize buffer with undefined values.\n        ctx.texImage2D(target, level, internal_format, width, height, border, format, type, null)\n      } else {\n        ctx.texImage2D(target, level, internal_format, width, height, border, format, type, wasm.mmem.HEAPU8, pixels_ptr)\n      }\n    },\n    jsGlTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels_ptr) {\n      ctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, wasm.mmem.HEAPU8, pixels_ptr)\n    },\n    jsGlCreateBuffer() {\n      const id = getNextResId()\n      const buf = ctx.createBuffer()\n      if (!buf) throw new Error('cannot create buffer')\n      buffers.set(id, buf)\n      return id\n    },\n    jsGlVertexAttribPointer(index, size, type, normalized, stride, offset) {\n      ctx.vertexAttribPointer(index, size, type, !!normalized, stride, offset)\n    },\n    jsGlActiveTexture(tex) {\n      // tex is a gl.TEXTUREI and not a resource id.\n      ctx.activeTexture(tex)\n    },\n    jsGlDeleteTexture(id) {\n      ctx.deleteTexture(textures.get(id))\n      removeResId(id)\n    },\n    jsGlUseProgram(id) {\n      if (!id) {\n        ctx.useProgram(null)\n      } else {\n        const program = ensureProgram(id)\n        ctx.useProgram(program)\n      }\n    },\n    jsGlUniformMatrix3fv(location, transpose, value_ptr) {\n      const loc = ensureUniform(location)\n      ctx.uniformMatrix3fv(loc, !!transpose, new Float32Array(wasm.mmem.HEAPU8.slice(value_ptr, value_ptr + 9 * 4).buffer))\n    },\n    jsGlUniformMatrix4fv(location, transpose, value_ptr) {\n      const loc = ensureUniform(location)\n      ctx.uniformMatrix4fv(loc, !!transpose, new Float32Array(wasm.mmem.HEAPU8.slice(value_ptr, value_ptr + 16 * 4).buffer))\n    },\n    jsGlUniform4fv(location, val_ptr) {\n      const loc = ensureUniform(location)\n      ctx.uniform4fv(loc, new Float32Array(wasm.mmem.HEAPU8.slice(val_ptr, val_ptr + 4 * 4).buffer))\n    },\n    jsGlUniform3fv(location, val_ptr) {\n      const loc = ensureUniform(location)\n      ctx.uniform3fv(loc, new Float32Array(wasm.mmem.HEAPU8.slice(val_ptr, val_ptr + 3 * 4).buffer))\n    },\n    jsGlUniform2fv(location, val_ptr) {\n      const loc = ensureUniform(location)\n      ctx.uniform2fv(loc, new Float32Array(wasm.mmem.HEAPU8.slice(val_ptr, val_ptr + 2 * 4).buffer))\n    },\n    jsGlUniform1fv(location, val_ptr) {\n      const loc = ensureUniform(location)\n      ctx.uniform1fv(loc, new Float32Array(wasm.mmem.HEAPU8.slice(val_ptr, val_ptr + 1 * 4).buffer))\n    },\n    jsGlUniform1i(location, val) {\n      const loc = ensureUniform(location)\n      ctx.uniform1i(loc, val)\n    },\n    jsGlBufferData(target, data_size, data_ptr, usage) {\n      ctx.bufferData(target, wasm.mmem.HEAPU8, usage, data_ptr, data_size)\n    },\n    jsGlBufferSubData(target, offset, data_size, data_ptr) {\n      ctx.bufferSubData(target, offset, wasm.mmem.HEAPU8, data_ptr, data_size)\n    },\n    jsGlDrawElements(mode, num_indices, index_type, index_offset) {\n      ctx.drawElements(mode, num_indices, index_type, index_offset)\n    },\n    jsGlBindRenderbuffer(target, id) {\n      ctx.bindRenderbuffer(target, renderbuffers.get(id))\n    },\n    jsGlFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {\n      ctx.framebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffers.get(renderbuffer))\n    },\n    jsGlFramebufferTexture2D(target, attachment, textarget, texture, level) {\n      ctx.framebufferTexture2D(target, attachment, textarget, textures.get(texture), level)\n    },\n    jsGlViewport(x, y, width, height) {\n      ctx.viewport(x, y, width, height)\n    },\n    jsGlClear(mask) {\n      ctx.clear(mask)\n    },\n    jsGlBlendFunc(sfactor, dfactor) {\n      ctx.blendFunc(sfactor, dfactor)\n    },\n    jsGlBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) {\n      ctx.blitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)\n    },\n    jsGlBlendEquation(mode) {\n      ctx.blendEquation(mode)\n    },\n    jsGlScissor(x, y, width, height) {\n      ctx.scissor(x, y, width, height)\n    },\n    jsGlCheckFramebufferStatus(target) {\n      return ctx.checkFramebufferStatus(target)\n    },\n    jsGlDeleteVertexArray(id) {\n      ctx.deleteVertexArray(vertex_arrays.get(id)!)\n    },\n    jsGlDeleteBuffer(id) {\n      const buf = buffers.get(id)\n      buf && ctx.deleteBuffer(buf)\n      buffers.delete(id)\n    },\n    jsGlVertexAttribDivisor(index, divisor) {\n      ctx.vertexAttribDivisor(index, divisor);\n    },\n    jsGlFlush() {\n      ctx.flush()\n    },\n    jsGlFinish() {\n      ctx.finish()\n    },\n    jsGlBlendEquationSeparate(modeRGB, modeAlpha) {\n      ctx.blendEquationSeparate(modeRGB, modeAlpha)\n    },\n    jsGlBlendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n      ctx.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha)\n    },\n    jsGlPixelStorei(pname, param) {\n      ctx.pixelStorei(pname, !!param)\n    },\n    jsGlIsEnabled(target) {\n      return ctx.isEnabled(target) ? 1 : 0\n    },\n    glDisableVertexAttribArray(index) {\n      ctx.disableVertexAttribArray(index)\n    },\n    glGetAttribLocation(program_id, name) {\n      const program = ensureProgram(program_id)\n      const attrib = getCString(wasm, name)\n      return ctx.getAttribLocation(program, attrib)\n    },\n    glGetVertexAttribfv(index, pname, params) {\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2)\n    },\n    glGetVertexAttribiv(index, pname, params) {\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5)\n    },\n    glGetVertexAttribPointerv(index, pname, pointer_pointer) {\n      emscriptenWebGLGetVertexAttrib(index, pname, pointer_pointer, 0)\n    },\n  }\n}", "import { ImguiWasmInstance } from \"./types\";\n\nexport function initInputApi(canvas: HTMLCanvasElement): {\n  inputTick(deltaTime: number): number,\n  configure(instance: ImguiWasmInstance): void\n} {\n  const textArea = document.createElement('textarea')\n\n  let wasm: ImguiWasmInstance | null = null\n\n  canvas.parentElement?.appendChild(textArea)\n\n  const ImGuiMouseButton_Left = 0\n  const ImGuiMouseButton_Right = 1\n  const ImGuiMouseButton_Middle = 2\n\n  function getMousePos(canvas: HTMLCanvasElement, evt: PointerEvent) {\n    var rect = canvas.getBoundingClientRect();\n\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top - 1\n    };\n  }\n\n  function getImguiMouseButton(button: number) {\n    switch (button) {\n      case 0: return ImGuiMouseButton_Left\n      case 1: return ImGuiMouseButton_Middle\n      case 2: return ImGuiMouseButton_Right\n    }\n    return -1\n  }\n\n  function keyToImguiKey(key: string) {\n    switch (key) {\n      case \"Tab\": return EngineKey.EngineKey_Tab\n      case \"ArrowLeft\": return EngineKey.EngineKey_LeftArrow\n      case \"ArrowRight\": return EngineKey.EngineKey_RightArrow\n      case \"ArrowUp\": return EngineKey.EngineKey_UpArrow\n      case \"ArrowDown\": return EngineKey.EngineKey_DownArrow\n      case \"PageUp\": return EngineKey.EngineKey_PageUp\n      case \"PageDown\": return EngineKey.EngineKey_PageDown\n      case \"Home\": return EngineKey.EngineKey_Home\n      case \"End\": return EngineKey.EngineKey_End\n      case \"Insert\": return EngineKey.EngineKey_Insert\n      case \"Delete\": return EngineKey.EngineKey_Delete\n      case \"Backspace\": return EngineKey.EngineKey_Backspace\n\n      case \"Space\":\n      case \" \":\n        return EngineKey.EngineKey_Space\n\n      case \"Enter\": return EngineKey.EngineKey_Enter\n\n      case \"Escape\": return EngineKey.EngineKey_Escape\n\n      case \"Control\":\n      case \"LeftCtrl\":\n        return EngineKey.EngineKey_LeftCtrl\n\n      case \"Shift\":\n      case \"LeftShift\":\n        return EngineKey.EngineKey_LeftShift\n      case \"RightShift\":\n        return EngineKey.EngineKey_RightShift\n\n      case \"Alt\":\n      case \"LeftAlt\": return EngineKey.EngineKey_LeftAlt\n      case \"RightCtrl\": return EngineKey.EngineKey_RightCtrl\n\n      case \"RightAlt\":\n      case \"AltGraph\":\n        return EngineKey.EngineKey_RightAlt\n\n      case \"Meta\":\n      case \"RightSuper\":\n      case \"LeftSuper\":\n        return EngineKey.EngineKey_LeftSuper\n\n      case \"Menu\": return EngineKey.EngineKey_Menu\n      case \"0\": return EngineKey.EngineKey_0\n      case \"1\": return EngineKey.EngineKey_1\n      case \"2\": return EngineKey.EngineKey_2\n      case \"3\": return EngineKey.EngineKey_3\n      case \"4\": return EngineKey.EngineKey_4\n      case \"5\": return EngineKey.EngineKey_5\n      case \"6\": return EngineKey.EngineKey_6\n      case \"7\": return EngineKey.EngineKey_7\n      case \"8\": return EngineKey.EngineKey_8\n      case \"9\": return EngineKey.EngineKey_9\n      case \"A\":\n      case \"a\":\n        return EngineKey.EngineKey_A\n      case \"B\":\n      case \"b\":\n        return EngineKey.EngineKey_B\n      case \"C\":\n      case \"c\":\n        return EngineKey.EngineKey_C\n      case \"D\":\n      case \"d\":\n        return EngineKey.EngineKey_D\n      case \"E\":\n      case \"e\":\n        return EngineKey.EngineKey_E\n      case \"F\":\n      case \"f\":\n        return EngineKey.EngineKey_F\n      case \"G\":\n      case \"g\":\n        return EngineKey.EngineKey_G\n      case \"H\":\n      case \"h\":\n        return EngineKey.EngineKey_H\n      case \"I\":\n      case \"i\":\n        return EngineKey.EngineKey_I\n      case \"J\":\n      case \"j\":\n        return EngineKey.EngineKey_J\n      case \"K\":\n      case \"k\":\n        return EngineKey.EngineKey_K\n      case \"L\":\n      case \"l\":\n        return EngineKey.EngineKey_L\n      case \"M\":\n      case \"m\":\n        return EngineKey.EngineKey_M\n      case \"N\":\n      case \"n\":\n        return EngineKey.EngineKey_N\n      case \"O\":\n      case \"o\":\n        return EngineKey.EngineKey_O\n      case \"P\":\n      case \"p\":\n        return EngineKey.EngineKey_P\n      case \"Q\":\n      case \"q\":\n        return EngineKey.EngineKey_Q\n      case \"R\":\n      case \"r\":\n        return EngineKey.EngineKey_R\n      case \"S\":\n      case \"s\":\n        return EngineKey.EngineKey_S\n      case \"T\":\n      case \"t\":\n        return EngineKey.EngineKey_T\n      case \"U\":\n      case \"u\":\n        return EngineKey.EngineKey_U\n      case \"V\":\n      case \"v\":\n        return EngineKey.EngineKey_V\n      case \"W\":\n      case \"w\":\n        return EngineKey.EngineKey_W\n      case \"X\":\n      case \"x\":\n        return EngineKey.EngineKey_X\n      case \"Y\":\n      case \"y\":\n        return EngineKey.EngineKey_Y\n      case \"Z\":\n      case \"z\":\n        return EngineKey.EngineKey_Z\n      case \"F1\": return EngineKey.EngineKey_F1\n      case \"F2\": return EngineKey.EngineKey_F2\n      case \"F3\": return EngineKey.EngineKey_F3\n      case \"F4\": return EngineKey.EngineKey_F4\n      case \"F5\": return EngineKey.EngineKey_F5\n      case \"F6\": return EngineKey.EngineKey_F6\n      case \"F7\": return EngineKey.EngineKey_F7\n      case \"F8\": return EngineKey.EngineKey_F8\n      case \"F9\": return EngineKey.EngineKey_F9\n      case \"F10\": return EngineKey.EngineKey_F10\n      case \"F11\": return EngineKey.EngineKey_F11\n      case \"F12\": return EngineKey.EngineKey_F12\n      case \"`\": return EngineKey.EngineKey_Apostrophe\n      case \",\": return EngineKey.EngineKey_Comma\n      case \"-\":\n        return EngineKey.EngineKey_Minus\n      case \".\":\n        return EngineKey.EngineKey_Period\n      case \"Slash\":\n      case \"/\":\n        return EngineKey.EngineKey_Slash\n      case \"Semicolon\":\n      case \";\":\n        return EngineKey.EngineKey_Semicolon\n      case \"=\":\n        return EngineKey.EngineKey_Equal\n      case \"LeftBracket\":\n      case \"{\":\n        return EngineKey.EngineKey_LeftBracket\n      case \"RightBracket\":\n      case \"}\":\n        return EngineKey.EngineKey_RightBracket\n      case \"Backslash\":\n      case \"\\\\\":\n        return EngineKey.EngineKey_Backslash\n      case \"GraveAccent\":\n      case \"\u00B4\":\n        return EngineKey.EngineKey_GraveAccent\n      case \"CapsLock\": return EngineKey.EngineKey_CapsLock\n      case \"ScrollLock\": return EngineKey.EngineKey_ScrollLock\n      case \"NumLock\": return EngineKey.EngineKey_NumLock\n      case \"PrintScreen\": return EngineKey.EngineKey_PrintScreen\n      case \"Pause\": return EngineKey.EngineKey_Pause\n      case \"Keypad0\":\n        return EngineKey.EngineKey_Keypad0\n      case \"Keypad1\":\n        return EngineKey.EngineKey_Keypad1\n      case \"Keypad2\":\n        return EngineKey.EngineKey_Keypad2\n      case \"Keypad3\":\n        return EngineKey.EngineKey_Keypad3\n      case \"Keypad4\":\n        return EngineKey.EngineKey_Keypad4\n      case \"Keypad5\":\n        return EngineKey.EngineKey_Keypad5\n      case \"Keypad6\":\n        return EngineKey.EngineKey_Keypad6\n      case \"Keypad7\":\n        return EngineKey.EngineKey_Keypad7\n      case \"Keypad8\":\n        return EngineKey.EngineKey_Keypad8\n      case \"Keypad9\":\n        return EngineKey.EngineKey_Keypad9\n      case \"Period\":\n      case \"Separator\":\n      case \"Decimal\":\n      case \"KeypadDecimal\":\n        return EngineKey.EngineKey_KeypadDecimal\n      case \"KeypadDivide\":\n      case \"Divide\":\n        return EngineKey.EngineKey_KeypadDivide\n\n      case \"KeypadMultiply\":\n      case \"Multiply\":\n        return EngineKey.EngineKey_KeypadMultiply\n\n      case \"KeypadSubtract\":\n      case \"Subtract\":\n        return EngineKey.EngineKey_KeypadSubtract\n\n      case \"KeypadAdd\":\n      case \"Add\":\n        return EngineKey.EngineKey_KeypadAdd\n      case \"KeypadEnter\":\n        return EngineKey.EngineKey_KeypadEnter\n\n      case \"Equal\":\n      case \"KeypadEqual\":\n        return EngineKey.EngineKey_KeypadEqual\n\n      case \"GamepadStart\": return EngineKey.EngineKey_GamepadStart\n      case \"GamepadBack\": return EngineKey.EngineKey_GamepadBack\n      case \"GamepadFaceLeft\": return EngineKey.EngineKey_GamepadFaceLeft\n      case \"GamepadFaceRight\": return EngineKey.EngineKey_GamepadFaceRight\n      case \"GamepadFaceUp\": return EngineKey.EngineKey_GamepadFaceUp\n      case \"GamepadFaceDown\": return EngineKey.EngineKey_GamepadFaceDown\n      case \"GamepadDpadLeft\": return EngineKey.EngineKey_GamepadDpadLeft\n      case \"GamepadDpadRight\": return EngineKey.EngineKey_GamepadDpadRight\n      case \"GamepadDpadUp\": return EngineKey.EngineKey_GamepadDpadUp\n      case \"GamepadDpadDown\": return EngineKey.EngineKey_GamepadDpadDown\n      case \"GamepadL1\": return EngineKey.EngineKey_GamepadL1\n      case \"GamepadR1\": return EngineKey.EngineKey_GamepadR1\n      case \"GamepadL2\": return EngineKey.EngineKey_GamepadL2\n      case \"GamepadR2\": return EngineKey.EngineKey_GamepadR2\n      case \"GamepadL3\": return EngineKey.EngineKey_GamepadL3\n      case \"GamepadR3\": return EngineKey.EngineKey_GamepadR3\n      case \"GamepadLStickLeft\": return EngineKey.EngineKey_GamepadLStickLeft\n      case \"GamepadLStickRight\": return EngineKey.EngineKey_GamepadLStickRight\n      case \"GamepadLStickUp\": return EngineKey.EngineKey_GamepadLStickUp\n      case \"GamepadLStickDown\": return EngineKey.EngineKey_GamepadLStickDown\n      case \"GamepadRStickLeft\": return EngineKey.EngineKey_GamepadRStickLeft\n      case \"GamepadRStickRight\": return EngineKey.EngineKey_GamepadRStickRight\n      case \"GamepadRStickUp\": return EngineKey.EngineKey_GamepadRStickUp\n      case \"GamepadRStickDown\": return EngineKey.EngineKey_GamepadRStickDown\n\n      case \"MouseLeft\": return EngineKey.EngineKey_MouseLeft\n      case \"MouseRight\": return EngineKey.EngineKey_MouseRight\n      case \"MouseMiddle\": return EngineKey.EngineKey_MouseMiddle\n      case \"MouseX1\": return EngineKey.EngineKey_MouseX1\n      case \"MouseX2\": return EngineKey.EngineKey_MouseX2\n      case \"MouseWheelX\": return EngineKey.EngineKey_MouseWheelX\n      case \"MouseWheelY\": return EngineKey.EngineKey_MouseWheelY\n    }\n    return 0\n  }\n\n  function getModKey(e: KeyboardEvent) {\n    let mod = 0\n    if (e.shiftKey) {\n      mod |= 8\n    }\n    if (e.ctrlKey) {\n      mod |= 4\n    }\n    if (e.altKey) {\n      mod |= 2\n    }\n    if (e.metaKey) {\n      mod |= 1\n    }\n    return mod\n  }\n\n  canvas.addEventListener(\"pointermove\", (event) => {\n    if (!wasm) return\n    const { x, y } = getMousePos(canvas, event)\n    wasm.exports.mouseCallback(x, y)\n  });\n\n  canvas.addEventListener(\"pointerdown\", (event) => {\n    if (!wasm) return\n    const button = getImguiMouseButton(event.button)\n    wasm.exports.mousebuttonCallback(button, 1)\n  });\n  \n  canvas.addEventListener(\"pointerup\", (event) => {\n    if (!wasm) return\n    const button = getImguiMouseButton(event.button)\n    wasm.exports.mousebuttonCallback(button, 0)\n  });\n\n  textArea.addEventListener(\"pointerup\", (event) => {\n    if (!wasm) return\n    const button = getImguiMouseButton(event.button)\n    wasm.exports.mousebuttonCallback(button, 1)\n  });\n\n  canvas.addEventListener('contextmenu', (event) => {\n    event.preventDefault()\n    // mouse_right = true;\n  })\n\n  canvas.addEventListener(\"wheel\", (event) => {\n    if (!wasm) return\n\n    let multiplier = 1\n\n    event.preventDefault()\n\n    switch (event.deltaMode) {\n      case 0:\n        // DOM_DELTA_PIXEL: 100 pixels make up a step\n        multiplier = 1 / 100;\n        break;\n      case 1:\n        // DOM_DELTA_LINE: 3 lines make up a step\n        multiplier = 1 / 3;\n        break;\n      case 2:\n        // DOM_DELTA_PAGE: A page makes up 80 steps\n        multiplier = 80;\n        break;\n      default:\n        console.error('unrecognized mouse wheel delta mode: ' + event.deltaMode);\n    }\n\n    wasm.exports.mouseWheelCallback(\n\n      -multiplier * ((event.deltaX == 0) ? 0 : (event.deltaX > 0 ? Math.max(event.deltaX, 1) : Math.min(event.deltaX, -1))),\n      -multiplier * ((event.deltaY == 0) ? 0 : (event.deltaY > 0 ? Math.max(event.deltaY, 1) : Math.min(event.deltaY, -1)))\n    );\n  });\n\n  // window.addEventListener('resize', function () {\n  //   resize(window.innerWidth, window.innerHeight)\n  // })\n  // // Initially resize to the window size.\n  // resize(window.innerWidth, window.innerHeight)\n\n  function requestKeyFocus() {\n    textArea.focus()\n  }\n  textArea.addEventListener('paste', function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    const clipboardData = e.clipboardData\n    if (clipboardData) {\n      const clipboard = clipboardData.getData('Text')\n      debugger\n      // // For now submit event directly to wasm since it has dynamic payload.\n      // const ptr = ensureJsCapacity(clipboard.length * 3)\n      // const buf = new Uint8Array(wasm.exports.memory.buffer, ptr, wasm.jsCap)\n      // const len = textEncoder.encodeInto(clipboard, buf).written\n      // wasm.exports.wasmEmitPasteEvent(ptr, len);\n    }\n  })\n  textArea.addEventListener('blur', function (e) {\n    requestKeyFocus()\n  })\n  textArea.addEventListener('input', function (e: InputEvent) {\n    if (!wasm) return\n    textArea.value = ''\n    if (e.data !== null && e.data !== undefined) {\n      for (const char of e.data) {\n        const utf16 = char.codePointAt(0)\n        if (utf16 !== undefined) {\n          wasm.exports.charCallback(utf16)\n        }\n      }\n    }\n  } as any)\n\n  textArea.addEventListener('keydown', function (e) {\n    if (!wasm) return\n    wasm.exports.inputCallback(keyToImguiKey(e.key), 0, 1, getModKey(e))\n    // Need to prevent some browser default shortcuts. eg. Ctrl+S would bring up a save page dialog.\n    if (e.metaKey || e.ctrlKey || e.key == 'Tab' || e.key == 'Enter' || e.key == 'Return') {\n      e.preventDefault()\n      return false\n    }\n  });\n\n  textArea.addEventListener('keyup', function (e) {\n    if (!wasm) return\n    wasm.exports.inputCallback(keyToImguiKey(e.key), 0, 0, getModKey(e))\n  })\n\n  requestKeyFocus()\n\n  return {\n    inputTick(deltaTime: number) {\n      if (!wasm) throw new Error('you must call inputApi.configure(wasm) before the inputTick')\n      const ptr = wasm.exports.getGlobalInput();\n      const memory = wasm.mmem.view\n      memory.setFloat32(ptr, deltaTime, true); // delta time\n\n      return ptr\n    },\n    configure(instance) {\n      wasm = instance\n    },\n  }\n}\n\nenum EngineKey {\n  EngineKey_Tab = 12,\n  EngineKey_LeftArrow = 13,\n  EngineKey_RightArrow = 14,\n  EngineKey_UpArrow = 15,\n  EngineKey_DownArrow = 16,\n  EngineKey_PageUp = 17,\n  EngineKey_PageDown = 18,\n  EngineKey_Home = 19,\n  EngineKey_End = 20,\n  EngineKey_Insert = 21,\n  EngineKey_Delete = 22,\n  EngineKey_Backspace = 23,\n  EngineKey_Space = 24,\n  EngineKey_Enter = 25,\n  EngineKey_Escape = 26,\n  EngineKey_LeftCtrl = 27,\n  EngineKey_LeftShift = 28,\n  EngineKey_LeftAlt = 29,\n  EngineKey_LeftSuper = 30,\n  EngineKey_RightCtrl = 31,\n  EngineKey_RightShift = 32,\n  EngineKey_RightAlt = 33,\n  EngineKey_RightSuper = 34,\n  EngineKey_Menu = 35,\n  EngineKey_0 = 36,\n  EngineKey_1 = 37,\n  EngineKey_2 = 38,\n  EngineKey_3 = 39,\n  EngineKey_4 = 40,\n  EngineKey_5 = 41,\n  EngineKey_6 = 42,\n  EngineKey_7 = 43,\n  EngineKey_8 = 44,\n  EngineKey_9 = 45,\n  EngineKey_A = 46,\n  EngineKey_B = 47,\n  EngineKey_C = 48,\n  EngineKey_D = 49,\n  EngineKey_E = 50,\n  EngineKey_F = 51,\n  EngineKey_G = 52,\n  EngineKey_H = 53,\n  EngineKey_I = 54,\n  EngineKey_J = 55,\n  EngineKey_K = 56,\n  EngineKey_L = 57,\n  EngineKey_M = 58,\n  EngineKey_N = 59,\n  EngineKey_O = 60,\n  EngineKey_P = 61,\n  EngineKey_Q = 62,\n  EngineKey_R = 63,\n  EngineKey_S = 64,\n  EngineKey_T = 65,\n  EngineKey_U = 66,\n  EngineKey_V = 67,\n  EngineKey_W = 68,\n  EngineKey_X = 69,\n  EngineKey_Y = 70,\n  EngineKey_Z = 71,\n  EngineKey_F1 = 72,\n  EngineKey_F2 = 73,\n  EngineKey_F3 = 74,\n  EngineKey_F4 = 75,\n  EngineKey_F5 = 76,\n  EngineKey_F6 = 77,\n  EngineKey_F7 = 78,\n  EngineKey_F8 = 79,\n  EngineKey_F9 = 80,\n  EngineKey_F10 = 81,\n  EngineKey_F11 = 82,\n  EngineKey_F12 = 83,\n  EngineKey_Apostrophe = 84,\n  EngineKey_Comma = 85,\n  EngineKey_Minus = 86,\n  EngineKey_Period = 87,\n  EngineKey_Slash = 88,\n  EngineKey_Semicolon = 89,\n  EngineKey_Equal = 90,\n  EngineKey_LeftBracket = 91,\n  EngineKey_Backslash = 92,\n  EngineKey_RightBracket = 93,\n  EngineKey_GraveAccent = 94,\n  EngineKey_CapsLock = 95,\n  EngineKey_ScrollLock = 96,\n  EngineKey_NumLock = 97,\n  EngineKey_PrintScreen = 98,\n  EngineKey_Pause = 99,\n  EngineKey_Keypad0 = 100,\n  EngineKey_Keypad1 = 101,\n  EngineKey_Keypad2 = 102,\n  EngineKey_Keypad3 = 103,\n  EngineKey_Keypad4 = 104,\n  EngineKey_Keypad5 = 105,\n  EngineKey_Keypad6 = 106,\n  EngineKey_Keypad7 = 107,\n  EngineKey_Keypad8 = 108,\n  EngineKey_Keypad9 = 109,\n  EngineKey_KeypadDecimal = 110,\n  EngineKey_KeypadDivide = 111,\n  EngineKey_KeypadMultiply = 112,\n  EngineKey_KeypadSubtract = 113,\n  EngineKey_KeypadAdd = 114,\n  EngineKey_KeypadEnter = 115,\n  EngineKey_KeypadEqual = 116,\n  EngineKey_GamepadStart = 117,\n  EngineKey_GamepadBack = 118,\n  EngineKey_GamepadFaceLeft = 119,\n  EngineKey_GamepadFaceRight = 120,\n  EngineKey_GamepadFaceUp = 121,\n  EngineKey_GamepadFaceDown = 122,\n  EngineKey_GamepadDpadLeft = 123,\n  EngineKey_GamepadDpadRight = 124,\n  EngineKey_GamepadDpadUp = 125,\n  EngineKey_GamepadDpadDown = 126,\n  EngineKey_GamepadL1 = 127,\n  EngineKey_GamepadR1 = 128,\n  EngineKey_GamepadL2 = 129,\n  EngineKey_GamepadR2 = 130,\n  EngineKey_GamepadL3 = 131,\n  EngineKey_GamepadR3 = 132,\n  EngineKey_GamepadLStickLeft = 133,\n  EngineKey_GamepadLStickRight = 134,\n  EngineKey_GamepadLStickUp = 135,\n  EngineKey_GamepadLStickDown = 136,\n  EngineKey_GamepadRStickLeft = 137,\n  EngineKey_GamepadRStickRight = 138,\n  EngineKey_GamepadRStickUp = 139,\n  EngineKey_GamepadRStickDown = 140,\n  EngineKey_MouseLeft = 141,\n  EngineKey_MouseRight = 142,\n  EngineKey_MouseMiddle = 143,\n  EngineKey_MouseX1 = 144,\n  EngineKey_MouseX2 = 145,\n  EngineKey_MouseWheelX = 146,\n  EngineKey_MouseWheelY = 147,\n}", "import { getString } from \"./common\";\nimport { ImguiWasmImports } from \"./idl\";\nimport { ImguiWasmInstance } from \"./types\";\n\nexport function initStdxImports(wasm: ImguiWasmInstance): ImguiWasmImports[\"stdx\"] {\n  return {\n    jsPanic(ptr, len) {\n      const msg = getString(wasm, ptr, len)\n      debugger\n      throw new Error(msg);\n    },\n    jsWarn(ptr, len) {\n      console.warn(getString(wasm, ptr, len));\n    },\n    jsLog(ptr, len) {\n      console.log(getString(wasm, ptr, len));\n    },\n    jsErr(ptr, len) {\n      console.error(getString(wasm, ptr, len));\n    },\n  }\n}"],
  "mappings": "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",
  "names": ["canvas", "buf"]
}
